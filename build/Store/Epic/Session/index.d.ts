declare const _default: import("redux-observable").Epic<import("typesafe-actions").PayloadAction<"app/INITIALZE", import("../../Action").initializeApp.Payload> | import("typesafe-actions").EmptyAction<"app/INITIALZED"> | import("typesafe-actions").EmptyAction<"config/LOAD"> | import("typesafe-actions").PayloadAction<"config/LOADED", import("../../Action").ConfigLoaded.Payload> | import("typesafe-actions").EmptyAction<"config/LOAD_FAILED"> | import("typesafe-actions").PayloadAction<"language/CHANGE", import("../../../Types/Language").Language> | import("typesafe-actions").EmptyAction<"language/INITIALIZE"> | import("typesafe-actions").PayloadAction<"locale/SET_LOCALE", import("../../Action").setLocale.Payload> | import("typesafe-actions").EmptyAction<"login/OPEN"> | import("typesafe-actions").EmptyAction<"login/CLOSE"> | import("typesafe-actions").PayloadAction<"login/UPDATE_CREDENTIALS", import("../../Action").updateCredentials.Payload> | import("typesafe-actions").PayloadAction<"login/CHECK", import("../../Action").checkLogin.Payload> | import("typesafe-actions").EmptyAction<"login/LOGGED_IN"> | import("typesafe-actions").EmptyAction<"login/LOGIN_FAILED"> | import("typesafe-actions").EmptyAction<"logout/OPEN"> | import("typesafe-actions").EmptyAction<"logout/CLOSE"> | import("typesafe-actions").EmptyAction<"logout/FINISHED"> | import("typesafe-actions").EmptyAction<"navigation/OPEN"> | import("typesafe-actions").EmptyAction<"navigation/CLOSE"> | import("typesafe-actions").PayloadAction<"notification/ADD", import("../../../Types/Notification").Notification> | import("typesafe-actions").PayloadAction<"notification/remove", string> | import("typesafe-actions").EmptyAction<"notification/remove_all"> | import("typesafe-actions").PayloadAction<"notification/ERROR_ADD", import("axios").AxiosError> | import("typesafe-actions").PayloadAction<"notification/SET_IS_HISTORY_OPEN", boolean> | import("typesafe-actions").EmptyAction<"route/ENTER_AUTHORIZED"> | import("typesafe-actions").EmptyAction<"route/ENTER_UNAUTHORIZED"> | import("typesafe-actions").PayloadAction<string, import("../../Action").RouteDetails> | import("typesafe-actions").EmptyAction<"session/LOAD"> | import("typesafe-actions").EmptyAction<"route/CHECK"> | import("typesafe-actions").PayloadAction<"route/LOGOUT", import("../../Action").logout.Payload> | import("typesafe-actions").PayloadAction<"route/AUTHORIZE", import("../../Action").authorizeSession.Payload> | import("typesafe-actions").EmptyAction<"route/UNAUTHORIZE"> | import("typesafe-actions").EmptyAction<"settings/OPEN"> | import("typesafe-actions").EmptyAction<"settings/CLOSE"> | import("typesafe-actions").PayloadAction<"region/LOADED", import("../../Action").regionLoaded.Payload> | import("typesafe-actions").EmptyAction<"region/GET_FAILED"> | import("typesafe-actions").PayloadAction<"toast/ADD", import("../../../Types/Toast").Toast> | import("typesafe-actions").EmptyAction<"toast/DELETE"> | import("typesafe-actions").PayloadAction<"websocket/ADD_NAMESPACE", string> | import("typesafe-actions").PayloadAction<"websocket/CONNECT_REQUEST", string> | import("typesafe-actions").PayloadAction<"websocket/CONNECT_SUCCESS", string> | import("typesafe-actions").PayloadAction<"websocket/CONNECT_FAILED", import("../../../Types/WebSocket").IWebSocketError> | import("typesafe-actions").PayloadAction<"websocket/DISCONNECT_REQUEST", string> | import("typesafe-actions").PayloadAction<"websocket/DISCONNECT_SUCCESS", string> | import("typesafe-actions").PayloadAction<"websocket/JOIN_ROOM_REQUEST", import("../../../Types/WebSocket").IWebSocketRoom<string>> | import("typesafe-actions").PayloadAction<"websocket/JOIN_ROOM_LOADING", import("../../../Types/WebSocket").IWebSocketRoomConnection> | import("typesafe-actions").PayloadAction<"websocket/JOIN_ROOM_SUCCESS", import("../../../Types/WebSocket").IWebSocketRoomConnection> | import("typesafe-actions").PayloadAction<"websocket/JOIN_ROOM_FAILURE", import("../../../Types/WebSocket").IWebSocketRoomConnection> | import("typesafe-actions").PayloadAction<"websocket/LEAVE_ROOM_REQUEST", import("../../../Types/WebSocket").IWebSocketRoom<string>> | import("typesafe-actions").PayloadAction<"websocket/LEAVE_ROOM_SUCCESS", import("../../../Types/WebSocket").IWebSocketRoom<string>> | import("typesafe-actions").PayloadAction<"websocket/UPDATE_ROOM", import("../../../API/JSC").default.DTO.WebSocket.IWebSocketRoomUpdateDTO<any>>, import("typesafe-actions").PayloadAction<"app/INITIALZE", import("../../Action").initializeApp.Payload> | import("typesafe-actions").EmptyAction<"app/INITIALZED"> | import("typesafe-actions").EmptyAction<"config/LOAD"> | import("typesafe-actions").PayloadAction<"config/LOADED", import("../../Action").ConfigLoaded.Payload> | import("typesafe-actions").EmptyAction<"config/LOAD_FAILED"> | import("typesafe-actions").PayloadAction<"language/CHANGE", import("../../../Types/Language").Language> | import("typesafe-actions").EmptyAction<"language/INITIALIZE"> | import("typesafe-actions").PayloadAction<"locale/SET_LOCALE", import("../../Action").setLocale.Payload> | import("typesafe-actions").EmptyAction<"login/OPEN"> | import("typesafe-actions").EmptyAction<"login/CLOSE"> | import("typesafe-actions").PayloadAction<"login/UPDATE_CREDENTIALS", import("../../Action").updateCredentials.Payload> | import("typesafe-actions").PayloadAction<"login/CHECK", import("../../Action").checkLogin.Payload> | import("typesafe-actions").EmptyAction<"login/LOGGED_IN"> | import("typesafe-actions").EmptyAction<"login/LOGIN_FAILED"> | import("typesafe-actions").EmptyAction<"logout/OPEN"> | import("typesafe-actions").EmptyAction<"logout/CLOSE"> | import("typesafe-actions").EmptyAction<"logout/FINISHED"> | import("typesafe-actions").EmptyAction<"navigation/OPEN"> | import("typesafe-actions").EmptyAction<"navigation/CLOSE"> | import("typesafe-actions").PayloadAction<"notification/ADD", import("../../../Types/Notification").Notification> | import("typesafe-actions").PayloadAction<"notification/remove", string> | import("typesafe-actions").EmptyAction<"notification/remove_all"> | import("typesafe-actions").PayloadAction<"notification/ERROR_ADD", import("axios").AxiosError> | import("typesafe-actions").PayloadAction<"notification/SET_IS_HISTORY_OPEN", boolean> | import("typesafe-actions").EmptyAction<"route/ENTER_AUTHORIZED"> | import("typesafe-actions").EmptyAction<"route/ENTER_UNAUTHORIZED"> | import("typesafe-actions").PayloadAction<string, import("../../Action").RouteDetails> | import("typesafe-actions").EmptyAction<"session/LOAD"> | import("typesafe-actions").EmptyAction<"route/CHECK"> | import("typesafe-actions").PayloadAction<"route/LOGOUT", import("../../Action").logout.Payload> | import("typesafe-actions").PayloadAction<"route/AUTHORIZE", import("../../Action").authorizeSession.Payload> | import("typesafe-actions").EmptyAction<"route/UNAUTHORIZE"> | import("typesafe-actions").EmptyAction<"settings/OPEN"> | import("typesafe-actions").EmptyAction<"settings/CLOSE"> | import("typesafe-actions").PayloadAction<"region/LOADED", import("../../Action").regionLoaded.Payload> | import("typesafe-actions").EmptyAction<"region/GET_FAILED"> | import("typesafe-actions").PayloadAction<"toast/ADD", import("../../../Types/Toast").Toast> | import("typesafe-actions").EmptyAction<"toast/DELETE"> | import("typesafe-actions").PayloadAction<"websocket/ADD_NAMESPACE", string> | import("typesafe-actions").PayloadAction<"websocket/CONNECT_REQUEST", string> | import("typesafe-actions").PayloadAction<"websocket/CONNECT_SUCCESS", string> | import("typesafe-actions").PayloadAction<"websocket/CONNECT_FAILED", import("../../../Types/WebSocket").IWebSocketError> | import("typesafe-actions").PayloadAction<"websocket/DISCONNECT_REQUEST", string> | import("typesafe-actions").PayloadAction<"websocket/DISCONNECT_SUCCESS", string> | import("typesafe-actions").PayloadAction<"websocket/JOIN_ROOM_REQUEST", import("../../../Types/WebSocket").IWebSocketRoom<string>> | import("typesafe-actions").PayloadAction<"websocket/JOIN_ROOM_LOADING", import("../../../Types/WebSocket").IWebSocketRoomConnection> | import("typesafe-actions").PayloadAction<"websocket/JOIN_ROOM_SUCCESS", import("../../../Types/WebSocket").IWebSocketRoomConnection> | import("typesafe-actions").PayloadAction<"websocket/JOIN_ROOM_FAILURE", import("../../../Types/WebSocket").IWebSocketRoomConnection> | import("typesafe-actions").PayloadAction<"websocket/LEAVE_ROOM_REQUEST", import("../../../Types/WebSocket").IWebSocketRoom<string>> | import("typesafe-actions").PayloadAction<"websocket/LEAVE_ROOM_SUCCESS", import("../../../Types/WebSocket").IWebSocketRoom<string>> | import("typesafe-actions").PayloadAction<"websocket/UPDATE_ROOM", import("../../../API/JSC").default.DTO.WebSocket.IWebSocketRoomUpdateDTO<any>>, import("../../Reducer/Global").State, {}>;
export default _default;
